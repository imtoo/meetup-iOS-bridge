# Uncomment the next line to define a global platform for your project
# platform :ios, '9.0'

target 'meetup' do
	# Comment the next line if you're not using Swift and don't want to use dynamic frameworks
	use_frameworks!

	# Pods for meetup
	node_modules_path = '../node_modules'
	pod 'React', :path => "#{node_modules_path}/react-native", :subspecs => [
		'Core',
		'CxxBridge',
		'DevSupport',
		'RCTImage',
		'RCTNetwork',
		'RCTText',
		'RCTWebSocket',
	]

	pod 'yoga', :path => "#{node_modules_path}/react-native/ReactCommon/yoga"
	pod 'Charts'

	def change_lines_in_file(file_path, &change)
		print "Fixing #{file_path}...\n"

		contents = []

		file = File.open(file_path, 'r')
		file.each_line do | line |
			contents << line
		end
		file.close

		File.open(file_path, 'w') do |f|
			f.puts(change.call(contents))
		end
	end

	post_install do |installer|
		# https://github.com/facebook/yoga/issues/711#issuecomment-381098373
		change_lines_in_file('./Pods/Target Support Files/yoga/yoga-umbrella.h') do |lines|
			lines.reject do | line |
				[
				'#import "Utils.h"',
				'#import "YGLayout.h"',
				'#import "YGNode.h"',
				'#import "YGNodePrint.h"',
				'#import "YGStyle.h"',
				'#import "Yoga-internal.h"',
				].include?(line.strip)
			end
		end

		# https://github.com/facebook/yoga/issues/711#issuecomment-374605785
		change_lines_in_file("#{node_modules_path}/react-native/React/Base/Surface/SurfaceHostingView/RCTSurfaceSizeMeasureMode.h") do |lines|
			unless lines[27].include?("#ifdef __cplusplus")
				lines.insert(27, "#ifdef __cplusplus")
				lines.insert(34, "#endif")
			end
			lines
		end

		# https://github.com/facebook/react-native/issues/13198
		change_lines_in_file("#{node_modules_path}/react-native/Libraries/NativeAnimation/RCTNativeAnimatedNodesManager.h") do |lines|
			lines.map { |line| line.include?("#import <RCTAnimation/RCTValueAnimatedNode.h>") ? '#import "RCTValueAnimatedNode.h"' : line }
		end

		# https://github.com/facebook/react-native/issues/16039
		change_lines_in_file("#{node_modules_path}/react-native/Libraries/WebSocket/RCTReconnectingWebSocket.m") do |lines|
			lines.map { |line| line.include?("#import <fishhook/fishhook.h>") ? '#import "fishhook.h"' : line }
		end
	end

end
